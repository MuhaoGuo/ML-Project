from sklearn.ensemble import RandomForestClassifier
from sklearn.model_selection import train_test_split
import numpy as np
import pandas as pd

train = pd.read_csv("train.csv")
test = pd.read_csv("test.csv")
y_train = train.loc[:,'ConvertedComp']
x_train = train.drop(['MainBranch','ConvertedComp'],axis=1)

y_test = test.loc[:,'ConvertedComp']
x_test = test.drop(['MainBranch','ConvertedComp'],axis=1)

def Randomforest_Algorithm(Train_X,Train_Y,Test_X,Test_Y):
    train_score_list=[]
    test_score_list_val=[]
    x_train_bag, unuse1, y_train_bag , unuse2 = train_test_split(Train_X, Train_Y, test_size=0.67)
    y_train_bag = np.ravel(y_train_bag)

    # validation, select the best model and get the parameters
    for maxfeature in range(5,10):
        for treenumber in range(100,1500,50):
            clf = RandomForestClassifier (n_estimators=treenumber, bootstrap=True, max_features=maxfeature)
            clf.fit(x_train_bag, y_train_bag)

            score_train_each_B = clf.score(Train_X, Train_Y)

            score_test_each_B_val = clf.score(unuse1, unuse2)

            ##calculate the score
            train_score_list.append(score_train_each_B)
            test_score_list_val.append(score_test_each_B_val)

    #get the selected model's parameters
    selected_model_index = test_score_list_val.index(max(test_score_list_val))
    best_maxfeature = (selected_model_index//28)+5
    best_treenumber = ((selected_model_index % 28) - 1) * 50 + 100
    print("the best maxfeature for the best model is "+str(best_maxfeature))
    print("the best treenumber for the best model is "+str(best_treenumber))

    # our predict model
    clf = RandomForestClassifier(n_estimators=best_treenumber, bootstrap=True, max_features=best_maxfeature)
    # training model
    clf.fit(Train_X,Train_Y)
    # predict
    predict_result = clf.predict(Test_X)
    # print ("predict result is \n" + str (predict_result))
    score_test = clf.score(Test_X,Test_Y)

    return score_test

if __name__ == '__main__':
    print ("Random forest algorithm: the predit score is\n"+str(Randomforest_Algorithm(x_train, y_train, x_test, y_test)))
