from sklearn.svm import SVC
from sklearn.model_selection import GridSearchCV
import pandas as pd

train = pd.read_csv("train.csv")
test = pd.read_csv("test.csv")
y_train = train.loc[:,'ConvertedComp']
x_train = train.drop(['MainBranch','ConvertedComp'],axis=1)

y_test = test.loc[:,'ConvertedComp']
x_test = test.drop(['MainBranch','ConvertedComp'],axis=1)

def SVC_Algorithm(Train_X,Train_Y,Test_X,Test_Y):

    # general model
    # clf_svc = SVC(decision_function_shape='ovr', kernel='rbf', probability=True)

    # validation to select the best parameters
    param_grid = {'gamma': [0.1, 0.01, 0.001, 0.0001], 'C': [0.1, 1, 10, 100]}
    clf = GridSearchCV(SVC(decision_function_shape='ovr', kernel='rbf', probability=True,), cv=10, param_grid= param_grid)

    clf.fit(Train_X, Train_Y)

    best_params = clf.best_params_
    best_score = clf.best_score_
    best_estimator = clf.best_estimator_    # our selected model

    print ("the parameters for the best model are " + str(best_params))
    print ("the cross validation score for the best model is " + str(best_score))

    score_test = best_estimator.score(Test_X,Test_Y)

    return score_test
print ("SVC Algorithm: the predict score is "+ str(SVC_Algorithm(x_train, y_train, x_test, y_test)))
